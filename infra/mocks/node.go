// Code generated by MockGen. DO NOT EDIT.
// Source: node.go

// Package mock_infra is a generated GoMock package.
package mock_infra

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockNoder is a mock of Noder interface
type MockNoder struct {
	ctrl     *gomock.Controller
	recorder *MockNoderMockRecorder
}

// MockNoderMockRecorder is the mock recorder for MockNoder
type MockNoderMockRecorder struct {
	mock *MockNoder
}

// NewMockNoder creates a new mock instance
func NewMockNoder(ctrl *gomock.Controller) *MockNoder {
	mock := &MockNoder{ctrl: ctrl}
	mock.recorder = &MockNoderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockNoder) EXPECT() *MockNoderMockRecorder {
	return m.recorder
}

// Provision mocks base method
func (m *MockNoder) Provision(meta map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Provision", meta)
	ret0, _ := ret[0].(error)
	return ret0
}

// Provision indicates an expected call of Provision
func (mr *MockNoderMockRecorder) Provision(meta interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Provision", reflect.TypeOf((*MockNoder)(nil).Provision), meta)
}

// GetConfig mocks base method
func (m *MockNoder) GetConfig() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetConfig")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetConfig indicates an expected call of GetConfig
func (mr *MockNoderMockRecorder) GetConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetConfig", reflect.TypeOf((*MockNoder)(nil).GetConfig))
}

// GetType mocks base method
func (m *MockNoder) GetType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetType indicates an expected call of GetType
func (mr *MockNoderMockRecorder) GetType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetType", reflect.TypeOf((*MockNoder)(nil).GetType))
}

// GetName mocks base method
func (m *MockNoder) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockNoderMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockNoder)(nil).GetName))
}

// GetToken mocks base method
func (m *MockNoder) GetToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken
func (mr *MockNoderMockRecorder) GetToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockNoder)(nil).GetToken))
}

// GetIP mocks base method
func (m *MockNoder) GetIP() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetIP")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetIP indicates an expected call of GetIP
func (mr *MockNoderMockRecorder) GetIP() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetIP", reflect.TypeOf((*MockNoder)(nil).GetIP))
}

// Dump mocks base method
func (m *MockNoder) Dump() map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Dump")
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// Dump indicates an expected call of Dump
func (mr *MockNoderMockRecorder) Dump() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Dump", reflect.TypeOf((*MockNoder)(nil).Dump))
}
